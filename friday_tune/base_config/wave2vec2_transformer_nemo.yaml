name: &name "QuartzNet15x5"
labels: &labels [" ", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m",
                 "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "'"]


model:
  sample_rate: &sample_rate 16000
  repeat: &repeat 5
  dropout: &dropout 0.0
  separable: &separable true
  labels: *labels
  log_prediction: true

  train_ds:
    manifest_filepath: ???
    sample_rate: 16000
    labels: *labels
    batch_size: 16
    trim_silence: True
    min_duration: 0.2
    max_duration: 16.7
    shuffle: True
    is_tarred: False
    tarred_audio_filepaths: null
    tarred_shard_strategy: "scatter"
    num_workers: 2
    # normalize_transcripts: false

  validation_ds:
    manifest_filepath: ???
    sample_rate: 16000
    labels: *labels
    batch_size: 16
    shuffle: False
    num_workers: 2
    # normalize_transcripts: false
    
  preprocessor:
    _target_: friday.asr.models.ctc_wave2vec_model.Wave2Vec2Preprocessor
    sample_rate: *sample_rate
    do_normalize: true
    padding_value: 0.0
    pad_to: 16
    dither: 0.00001

  # spec_augment:
  #   _target_: nemo.collections.asr.modules.SpectrogramAugmentation
  #   rect_freq: 50
  #   rect_masks: 5
  #   rect_time: 120

  encoder:
    _target_: friday.asr.models.ctc_wave2vec_model.Wave2Vec2Encoder
    # feat_in: *n_mels
    # activation: relu
    # conv_mask: true
    pretrained_model_name: facebook/wav2vec2-large-xlsr-53

    # jasper:
    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 256
    #   kernel: [33]
    #   repeat: 1
    #   residual: false
    #   separable: *separable
    #   stride: [2]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 256
    #   kernel: [33]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 256
    #   kernel: [33]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 256
    #   kernel: [33]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 256
    #   kernel: [39]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 256
    #   kernel: [39]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 256
    #   kernel: [39]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [51]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [51]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [51]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [63]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [63]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [63]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [75]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [75]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [75]
    #   repeat: *repeat
    #   residual: true
    #   separable: *separable
    #   stride: [1]

    # - dilation: [2]
    #   dropout: *dropout
    #   filters: 512
    #   kernel: [87]
    #   repeat: 1
    #   residual: false
    #   separable: *separable
    #   stride: [1]

    # - dilation: [1]
    #   dropout: *dropout
    #   filters: &enc_filters 1024
    #   kernel: [1]
    #   repeat: 1
    #   residual: false
    #   stride: [1]

  decoder:
    _target_: nemo.collections.asr.modules.ConvASRDecoder
    feat_in: 1024
    num_classes: 28
    vocabulary: *labels

  optim:
    name: novograd
    # _target_: nemo.core.optim.optimizers.Novograd
    lr: 1e-3
    # optimizer arguments
    betas: [0.95, 0.98]  # from (0.8, 0.5)
    weight_decay: 1e-4  # from 0.001 

    # scheduler setup
    sched:
      name: CosineAnnealing

      # pytorch lightning args
      # monitor: val_loss
      # reduce_on_plateau: false

      # Scheduler params
      warmup_steps: null
      warmup_ratio: 0.1
      min_lr: 1e-5 # from 0.0
      last_epoch: -1

trainer:
  gpus: 1 # number of gpus
  max_epochs: 30
  max_steps: null # computed at runtime if not set
  num_nodes: 1
  accelerator: ddp
  accumulate_grad_batches: 1
  checkpoint_callback: False  # Provided by exp_manager
  logger: False  # Provided by exp_manager
  log_every_n_steps: 200  # Interval of logging.
  val_check_interval: 0.25  # Set to 0.25 to check 4 times per epoch, or an int for number of iterations
  precision: 16
  amp_level: O1

exp_manager:
  exp_dir: null
  name: *name
  create_tensorboard_logger: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: "val_wer"
    mode: "min"
  create_wandb_logger: False
  wandb_logger_kwargs:
    name: null
    project: null

hydra:
  run:
    dir: .
  job_logging:
    root:
      handlers: null
